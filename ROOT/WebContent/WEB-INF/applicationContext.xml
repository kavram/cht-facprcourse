<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
 http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
 http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
 http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
 http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
 http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!--  turn on annotations -->
	<context:annotation-config />
	<context:component-scan base-package="com.cht" />
	
	<!-- For Spring 2 Controllers -->
	<bean
		class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter">
	</bean>
	

	<bean id="appProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
 		<property name="locations">
			<list>
				<value>classpath*:firstaidcprcourses.properties</value>
				<value>file:/data/conf/firstaidcprcourses.properties</value>
			</list>
		</property>
	</bean>
	
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="properties" ref="appProperties" />
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
	</bean>
	
	<bean id="authorizeConf" class="com.cht.firstaidcpr4me.core.domain.objects.AuthorizeConf">
		<property name="apiLoginId" value="${apiLoginId}" />
		<property name="transactionKey" value="${transactionKey}" />
		<property name="relayResponseUrl" value="${relayResponseUrl}" />
		<property name="postUrl" value="${postUrl}" />
		<property name="version" value="${version}" />
		<property name="type" value="${type}" />
		<property name="method" value="${method}" />
		<property name="testRequest" value="${testRequest}" />
		<property name="notes" value="${notes}" />
	</bean>
	
	<bean id="emailConf" class="com.cht.firstaidcpr4me.core.domain.objects.EmailConf">
		<property name="smtpHost" value="${smtpHost}" />
		<property name="siteDomain" value="${siteDomain}" />
		<property name="fromAddress" value="${fromAddress}" />		
	</bean>
		
	
   	<bean id="FADataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
        	<value>java:comp/env/jdbc/TestDB</value>
        </property>
    </bean>  
    
 		
	<bean id="hibernateSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="FADataSource" />
		</property>
        <property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="packagesToScan" value="com.cht"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.max_fetch_depth">0</prop>				
				<prop key="hibernate.cache.use_query_cache">true</prop>				
				<prop key="hibernate.jdbc.fetch_size">8</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>												
				<prop key="hibernate.connection.release_mode">auto</prop>			
				<prop key="hibernate.validator.autoregister_listeners">false</prop>												
				<prop key="hibernate.search.autoregister_listeners">false</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>			
			</props>						
		</property>
	</bean>
  
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="hibernateSessionFactory"/>
    </bean>

    <bean id="loginDao" class="com.cht.firstaidcpr4me.core.domain.dao.LoginDAOImpl">
        <property name="sessionFactory" ref="hibernateSessionFactory"/>
    </bean>    
    	
	<bean id="userService" class="com.cht.firstaidcpr4me.core.domain.services.UserServiceImpl">
    </bean>
    
    <bean id="loginPaidCourseDao" class="com.cht.firstaidcpr4me.core.domain.dao.LoginPaidCourseDaoImpl">
        <property name="sessionFactory" ref="hibernateSessionFactory"/>
    </bean>    
    
    <bean id="loginEmailValidationDao" class="com.cht.firstaidcpr4me.core.domain.dao.LoginEmailValidationDaoImpl">
        <property name="sessionFactory" ref="hibernateSessionFactory"/>
    </bean>    
    		
	<bean id="loginPaymentService" class="com.cht.firstaidcpr4me.core.domain.services.LoginPaymentServiceImpl">
    </bean>

	<bean id="courseService" class="com.cht.firstaidcpr4me.core.domain.services.CourseServiceImpl">
    </bean>

	<bean id="questionService" class="com.cht.firstaidcpr4me.core.domain.services.QuestionServiceImpl">
    </bean>
		
	<bean id="userForgotPasswordService" class="com.cht.firstaidcpr4me.core.domain.services.UserForgotPasswordServiceImpl">
    </bean>
	
			
    <bean id="courseDao" class="com.cht.firstaidcpr4me.core.domain.dao.CourseDaoImpl">
        <property name="sessionFactory" ref="hibernateSessionFactory"/>
    </bean>    

    <bean id="questionDao" class="com.cht.firstaidcpr4me.core.domain.dao.QuestionDaoImpl">
        <property name="sessionFactory" ref="hibernateSessionFactory"/>
    </bean>    
    
    		
    <bean id="loginForgotPasswordDao" class="com.cht.firstaidcpr4me.core.domain.dao.LoginForgotPasswordDaoImpl">
        <property name="sessionFactory" ref="hibernateSessionFactory"/>
    </bean>    
    	
		
   <bean id="persistenceExceptionTranslationPostProcessor"
      class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
    
   <bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor" />

   	<bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
   		<property name="resourceLoaderPath" value="/WEB-INF/velocity/"/>
 	</bean>
 	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
    	<property name="host" value="${smtpHost}"/>
		<property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">false</prop>
                <prop key="mail.smtp.starttls.enable">false</prop>
                <prop key="mail.debug">true</prop>
            </props>
        </property>    	
	</bean>   	
	
	<bean id="emailService" class="com.cht.firstaidcpr4me.core.domain.services.EmailServiceImpl">
		<property name="siteDomain" value="${siteDomain}" />
		<property name="fromAddress" value="${fromAddress}" />		
	</bean>   	
		
	
 <tx:annotation-driven transaction-manager="transactionManager" />
		
	
	
			
</beans>
